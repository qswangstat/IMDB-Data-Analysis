library(shiny)
runApp("Shiny")
setwd("G:/RUC_ISBD/2018-2019SecondSemester/Advanced Applied Statistics")
setwd("G:/RUC_ISBD/2018-2019SecondSemester/Advanced Applied Statistics")
runApp("Shiny")
runApp('Shiny')
runApp('Shiny')
?save
runApp('Shiny')
library(shinydashboard)
?background
?column
runApp('Shiny')
?renderPlotly
runApp('Shiny')
p = movie %>%
group_by(genres) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10) %>%
plot_ly(labels = ~genres, values = ~count,
insidetextfont = list(color = 'Black'),
marker = list(colors = colors,
line = list(color = 'Black', width = .5)),
opacity = 0.8) %>%
add_pie(hole = 0.6) %>%
layout(title = "Genre wise share of movies for top 10 genres",
titlefont = list(family = "Times", size = 20, color = "grey"),
xaxis = list(showgrid = T, zeroline = F, showticklabels = F),
yaxis = list(showgrid = T, zeroline = F, showticklabels = F),
showlegend = T,
margin = list(t = 50, b = 50))
movie = read_csv("../Data/movie.csv")
movie = read_csv("/Data/movie.csv")
setwd("G:/RUC_ISBD/2018-2019SecondSemester/Advanced Applied Statistics/Shiny")
movie = read_csv("../Data/movie.csv")
p = movie %>%
group_by(genres) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10) %>%
plot_ly(labels = ~genres, values = ~count,
insidetextfont = list(color = 'Black'),
marker = list(colors = colors,
line = list(color = 'Black', width = .5)),
opacity = 0.8) %>%
add_pie(hole = 0.6) %>%
layout(title = "Genre wise share of movies for top 10 genres",
titlefont = list(family = "Times", size = 20, color = "grey"),
xaxis = list(showgrid = T, zeroline = F, showticklabels = F),
yaxis = list(showgrid = T, zeroline = F, showticklabels = F),
showlegend = T,
margin = list(t = 50, b = 50))
p
class(p)
?renderPlot
runApp()
runApp()
renderPlotly(p = movie %>%
group_by(genres) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10) %>%
plot_ly(labels = ~genres, values = ~count,
insidetextfont = list(color = 'Black'),
marker = list(colors = colors,
line = list(color = 'Black', width = .5)),
opacity = 0.8) %>%
add_pie(hole = 0.6) %>%
layout(title = "Genre wise share of movies for top 10 genres",
titlefont = list(family = "Times", size = 20, color = "grey"),
xaxis = list(showgrid = T, zeroline = F, showticklabels = F),
yaxis = list(showgrid = T, zeroline = F, showticklabels = F),
showlegend = T,
margin = list(t = 50, b = 50))
}))
renderPlotly(p = movie %>%
group_by(genres) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10) %>%
plot_ly(labels = ~genres, values = ~count,
insidetextfont = list(color = 'Black'),
marker = list(colors = colors,
line = list(color = 'Black', width = .5)),
opacity = 0.8) %>%
add_pie(hole = 0.6) %>%
layout(title = "Genre wise share of movies for top 10 genres",
titlefont = list(family = "Times", size = 20, color = "grey"),
xaxis = list(showgrid = T, zeroline = F, showticklabels = F),
yaxis = list(showgrid = T, zeroline = F, showticklabels = F),
showlegend = T,
margin = list(t = 50, b = 50))
))
renderPlotly({
p = movie %>%
group_by(genres) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10) %>%
plot_ly(labels = ~genres, values = ~count,
insidetextfont = list(color = 'Black'),
marker = list(colors = colors,
line = list(color = 'Black', width = .5)),
opacity = 0.8) %>%
add_pie(hole = 0.6) %>%
layout(title = "Genre wise share of movies for top 10 genres",
titlefont = list(family = "Times", size = 20, color = "grey"),
xaxis = list(showgrid = T, zeroline = F, showticklabels = F),
yaxis = list(showgrid = T, zeroline = F, showticklabels = F),
showlegend = T,
margin = list(t = 50, b = 50))
})
?plotlyOutput
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?fluidRow
runApp()
runApp()
runApp()
runApp()
install.packages('rsconnect')
rsconnect::setAccountInfo(name='qswangstat', token='F56DE800BD97DD7FC48CB48457CC1ECB', secret='yB6A0VuQBaJyc0MoBJgLcFbTlvNPrQwwR3Jm98ou')
getwd()
library(rsconnect)
rsconnect::deployApp(getwd())
setwd("Code")
